{{{include snippets/docker-compose-container-name.yml}}}
services:
  {{{include snippets/docker-compose-php.yml}}}
  {{{include snippets/docker-compose-php-xdebug.yml}}}
  {{{include snippets/docker-compose-nginx.yml}}}
  {{{include snippets/docker-compose-db.yml}}}
  {{{include snippets/docker-compose-db2.yml}}}
  
<<<if{{{nodejs/enabled}}}>>>
  nodejs:
    build:
      context: ctx
      dockerfile: nodejs.Dockerfile
    tty: true
    volumes:
      - ./src:/var/www/html:cached
    extra_hosts:
      - "host.docker.internal:host-gateway"
      {{{nginx/host_gateways}}}
<<<endif>>>
    <<<if{{{nodejs/enabled}}}{{{isolation/enabled}}}>>>networks:
      - isolated<<<endif>>>

<<<if{{{search/elasticsearch/enabled}}}>>>
  elasticsearch:
    build:
      context: ctx
      dockerfile: elasticsearch.Dockerfile
    deploy:
      resources:
        limits:
          memory: 2512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms800m -Xmx800m"
      - "cluster.routing.allocation.disk.threshold_enabled=false"
      - "index.blocks.read_only_allow_delete"
    volumes:
      - elasticsearch_vlm_{{{search/elasticsearch/version}}}:/usr/share/elasticsearch/data
<<<endif>>>
    <<<if{{{search/elasticsearch/enabled}}}{{{isolation/enabled}}}>>>networks:
      - isolated<<<endif>>>
  
<<<if{{{search/opensearch/enabled}}}>>>
  opensearch:
    build:
      context: ctx
      dockerfile: opensearch.Dockerfile
    deploy:
      resources:
        limits:
          memory: 2512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    environment:
      OPENSEARCH_DISCOVERY_TYPE: 'single-node'
      DISABLE_INSTALL_DEMO_CONFIG: 'true'
      DISABLE_SECURITY_PLUGIN: 'true'
      ES_JAVA_OPTS: '-Xms800m -Xmx800m'
    volumes:
      - opensearch_vlm_{{{search/opensearch/version}}}:/usr/share/opensearch/data
<<<endif>>>
    <<<if{{{search/opensearch/enabled}}}{{{isolation/enabled}}}>>>networks:
      - isolated<<<endif>>>

<<<if{{{redis/enabled}}}>>>
  redisdb:
    build:
      context: ctx
      dockerfile: redis.Dockerfile
<<<endif>>>
    <<<if{{{redis/enabled}}}{{{isolation/enabled}}}>>>networks:
      - isolated<<<endif>>>

<<<if{{{rabbitmq/enabled}}}>>>
  rabbitmq:
    image: {{{rabbitmq/repository}}}:{{{rabbitmq/version}}}
<<<endif>>>
    <<<if{{{rabbitmq/enabled}}}{{{isolation/enabled}}}>>>networks:
      - isolated<<<endif>>>

<<<if{{{db/phpmyadmin/enabled}}}>>>
  phpmyadmin:
    image: {{{db/phpmyadmin/repository}}}:{{{db/phpmyadmin/version}}}
    environment:
      PMA_HOST: "db"
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
      PMA_ABSOLUTE_URI: "http://{{{nginx/host_name_default}}}/phpmyadmin/"
      PMA_USER: root
      PMA_PASSWORD: {{{db/root_password}}}
      UPLOAD_LIMIT: 2G
    ports:
      - "{{{nginx/port/project+2}}}:80"
    depends_on:
      - db
<<<endif>>>
    <<<if{{{db/phpmyadmin/enabled}}}{{{isolation/enabled}}}>>>networks:
      - isolated<<<endif>>>

<<<if{{{db2/phpmyadmin/enabled}}}>>>
  phpmyadmin2:
    image: {{{db2/phpmyadmin/repository}}}:{{{db2/phpmyadmin/version}}}
    environment:
      PMA_HOST: "db2"
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
      PMA_ABSOLUTE_URI: "http://{{{nginx/host_name_default}}}/phpmyadmin2/"
      PMA_USER: root
      PMA_PASSWORD: {{{db2/root_password}}}
      UPLOAD_LIMIT: 2G
    ports:
      - "{{{nginx/port/project+7}}}:80"
<<<endif>>>
    <<<if{{{db2/phpmyadmin/enabled}}}{{{isolation/enabled}}}>>>networks:
      - isolated<<<endif>>>

<<<if{{{search/elasticsearch/dashboard/enabled}}}>>>
  kibana:
    platform: linux/x86_64
    image: {{{search/elasticsearch/dashboard/repository}}}:{{{search/elasticsearch/version}}}
    environment:
      SERVER_BASEPATH: /kibana
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    ports:
      - "{{{nginx/port/project+3}}}:5601"
    depends_on:
      - elasticsearch
<<<endif>>>
    <<<if{{{search/elasticsearch/dashboard/enabled}}}{{{isolation/enabled}}}>>>networks:
      - isolated<<<endif>>>

<<<if{{{search/opensearch/dashboard/enabled}}}>>>
  opensearchdashboard:
    platform: linux/x86_64
    image: {{{search/opensearch/dashboard/repository}}}:{{{search/opensearch/version}}}
    environment:
      SERVER_BASEPATH: /opensearch-dashboard
      OPENSEARCH_HOSTS: '["http://opensearch:9200"]'
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: 'true'
    ports:
      - "{{{nginx/port/project+3}}}:5601"
    depends_on:
      - opensearch
<<<endif>>>
    <<<if{{{search/opensearch/dashboard/enabled}}}{{{isolation/enabled}}}>>>networks:
      - isolated<<<endif>>>

<<<if{{{varnish/enabled}}}>>>
  varnish:
    image: {{{varnish/repository}}}:{{{varnish/version}}}
    volumes:
      - ./src/{{{varnish/config_file}}}:/etc/varnish/default.vcl:ro
    extra_hosts:
      - "host.docker.internal:host-gateway"
      {{{nginx/host_gateways}}}
    command: "-p default_keep=300"
    environment:
      VARNISH_HTTP_PORT: {{{nginx/port/project+9}}}
      VARNISH_SIZE: 1G
    ports:
      - "{{{nginx/port/project+9}}}:{{{nginx/port/project+9}}}"
    depends_on:
      - nginx
<<<endif>>>
<<<if{{{varnish/enabled}}}{{{isolation/enabled}}}>>>networks:
  - isolated<<<endif>>>

volumes:
  dbdata:
  <<<if{{{db2/enabled}}}>>>dbdata2:<<<endif>>>
  <<<if{{{search/elasticsearch/enabled}}}>>>elasticsearch_vlm_{{{search/elasticsearch/version}}}:<<<endif>>>
  <<<if{{{search/opensearch/enabled}}}>>>opensearch_vlm_{{{search/opensearch/version}}}:<<<endif>>>
<<<if{{{isolation/enabled}}}>>>
networks:
  opened:
    driver: bridge
  isolated:
    driver: bridge
    internal: true
<<<endif>>>