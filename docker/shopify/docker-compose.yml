version: "3.8"
name: {{{container_name_prefix}}}{{{project_name}}}{{{scope}}}
services:
  php:
    build:
      context: ctx
      dockerfile: php.Dockerfile
    volumes:
      - ./src:/var/www/html:cached
      - ./composer:/var/www/.composer:cached
      - ./ssh/id_rsa:/var/www/.ssh/id_rsa:ro
      - ./ssh/known_hosts:/var/www/.ssh/known_hosts:cached
      - ./ctx/scripts/:/var/www/scripts/:cached
    environment:
    - COMPOSER_HOME=/var/www/.composer
    extra_hosts:
      - "host.docker.internal:host-gateway"
      {{{nginx/host_gateways}}}
    ports:
      - "{{{nginx/port/project+5}}}:35729"
    <<<if{{{isolation/enabled}}}>>>networks:
      - isolated<<<endif>>>

  nginx:
    build:
      context: ctx
      dockerfile: nginx.Dockerfile
    ports:
      - "{{{nginx/port/project}}}:80"
      - "{{{nginx/port/project_ssl}}}:443"
    volumes:
      - ./src:/var/www/html:delegated
      - ./ctx/nginx.conf:/etc/nginx/conf.d/default.conf:delegated
    extra_hosts:
      - "host.docker.internal:host-gateway"
      {{{nginx/host_gateways}}}
    depends_on:
      - php
    <<<if{{{isolation/enabled}}}>>>networks:
      - opened
      - isolated<<<endif>>>

  db:
    command: 
      --default-authentication-plugin=mysql_native_password
    build:
      context: ctx
      dockerfile: db.Dockerfile
    ports:
      - "{{{nginx/port/project+4}}}:3306"
    volumes:
      - dbdata:/var/lib/mysql
      - ./ctx/my.cnf:/etc/mysql/conf.d/mysql.cnf:delegated
    <<<if{{{isolation/enabled}}}>>>networks:
      - isolated<<<endif>>>

<<<if{{{db2/enabled}}}>>>
  db2:
    command:
      --default-authentication-plugin=mysql_native_password
    build:
      context: ctx
      dockerfile: db.Dockerfile
    ports:
      - "{{{nginx/port/project+6}}}:3306"
    volumes:
      - dbdata2:/var/lib/mysql
      - ./ctx/my.cnf:/etc/mysql/conf.d/mysql.cnf:delegated
<<<endif>>>
    <<<if{{{db2/enabled}}}{{{isolation/enabled}}}>>>networks:
      - isolated<<<endif>>>

<<<if{{{redis/enabled}}}>>>
  redisdb:
    build:
      context: ctx
      dockerfile: redis.Dockerfile
<<<endif>>>
    <<<if{{{redis/enabled}}}{{{isolation/enabled}}}>>>networks:
      - isolated<<<endif>>>

<<<if{{{rabbitmq/enabled}}}>>>
  rabbitmq:
    image: {{{rabbitmq/repository}}}:{{{rabbitmq/version}}}
<<<endif>>>
    <<<if{{{rabbitmq/enabled}}}{{{isolation/enabled}}}>>>networks:
      - isolated<<<endif>>>

<<<if{{{db/phpmyadmin/enabled}}}>>>
  phpmyadmin:
    image: {{{db/phpmyadmin/repository}}}:{{{db/phpmyadmin/version}}}
    environment:
      PMA_HOST: "db"
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
      PMA_ABSOLUTE_URI: "http://{{{nginx/host_name_default}}}/phpmyadmin/"
      PMA_USER: root
      PMA_PASSWORD: {{{db/root_password}}}
      UPLOAD_LIMIT: 2G
    ports:
      - "{{{nginx/port/project+2}}}:80"
    depends_on:
      - db
<<<endif>>>
    <<<if{{{db/phpmyadmin/enabled}}}{{{isolation/enabled}}}>>>networks:
      - isolated<<<endif>>>

<<<if{{{db2/phpmyadmin/enabled}}}>>>
  phpmyadmin2:
    image: {{{db2/phpmyadmin/repository}}}:{{{db2/phpmyadmin/version}}}
    environment:
      PMA_HOST: "db2"
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
      PMA_ABSOLUTE_URI: "http://{{{nginx/host_name_default}}}/phpmyadmin2/"
      PMA_USER: root
      PMA_PASSWORD: {{{db2/root_password}}}
      UPLOAD_LIMIT: 2G
    ports:
      - "{{{nginx/port/project+7}}}:80"
<<<endif>>>
    <<<if{{{db2/phpmyadmin/enabled}}}{{{isolation/enabled}}}>>>networks:
      - isolated<<<endif>>>

volumes:
  dbdata:
  <<<if{{{db2/enabled}}}>>>dbdata2:<<<endif>>>
<<<if{{{isolation/enabled}}}>>>
networks:
  opened:
    driver: bridge
  isolated:
    driver: bridge
    internal: true
<<<endif>>>